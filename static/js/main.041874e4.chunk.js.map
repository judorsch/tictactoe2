{"version":3,"sources":["components/TicButton.tsx","components/Turn.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TicButton","change","textTitle","symbolC","symbol","end","incr","turns","className","onClick","Turn","text","id","App","useState","turn","setTurn","s1","setSymbol1","s2","setSymbol2","s3","setSymbol3","s4","setSymbol4","s5","setSymbol5","s6","setSymbol6","s7","setSymbol7","s8","setSymbol8","s9","setSymbol9","setEnd","count","setCount","console","log","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.041874e4.chunk.js","sourcesContent":["interface ButtonProps{\r\n  change: (text:string) =>void,\r\n  textTitle:string,\r\n  symbolC: (text:string) =>void,\r\n  symbol:string,\r\n  end:boolean,\r\n  incr: (num:number) =>void\r\n  turns: number\r\n}\r\n\r\nexport const TicButton = ({change, textTitle, symbolC, symbol, end, incr, turns}: ButtonProps): JSX.Element => {\r\n  const flip = () =>  {\r\n    if((symbol === \"\") && (end === false)){\r\n      if(textTitle === \"Player O Turn\"){\r\n        change(\"Player X Turn\")\r\n        symbolC(\"O\")\r\n      }\r\n      else{\r\n        change(\"Player O Turn\")\r\n        symbolC(\"X\")\r\n      }\r\n      const num = turns + 1;\r\n      incr(num)\r\n    }\r\n  }\r\n\r\n  return <button className = \"space\" onClick={() => flip()}>{symbol}</button>\r\n}","export const Turn = ({text}: {text: string}): JSX.Element => {\r\n    return <div id= \"turn\">{text}</div>\r\n  }","import React, { useState } from 'react';\nimport { TicButton } from './components/TicButton';\nimport './App.css';\nimport {Turn} from './components/Turn';\n\nfunction App():JSX.Element {\n  const [turn, setTurn] = useState<string>(\"Player O Turn\");\n  const [s1, setSymbol1] = useState<string>(\"\");\n  const [s2, setSymbol2] = useState<string>(\"\");\n  const [s3, setSymbol3] = useState<string>(\"\");\n  const [s4, setSymbol4] = useState<string>(\"\");\n  const [s5, setSymbol5] = useState<string>(\"\");\n  const [s6, setSymbol6] = useState<string>(\"\");\n  const [s7, setSymbol7] = useState<string>(\"\");\n  const [s8, setSymbol8] = useState<string>(\"\");\n  const [s9, setSymbol9] = useState<string>(\"\");\n  const [end, setEnd] = useState<boolean>(false);\n  const [count, setCount] = useState<number>(0);\n  function refreshPage(){\n    window.location.reload();\n  }\n  const checkWin = () =>{\n    if(s1 !== \"\" && (s1 === s2) && (s2 === s3)){\n      return true;\n    }\n    else if(s4 !== \"\" && (s4 === s5) && (s5 === s6)){\n      return true;\n    }\n    else if(s7 !== \"\" && (s7 === s8) && (s8 === s9)){\n      return true;\n    }\n    else if(s1 !== \"\" && (s1 === s4) && (s4 === s7)){\n      return true;\n    }\n    else if(s2 !== \"\" && (s2 === s5) && (s5 === s8)){\n      return true;\n    }\n    else if(s3 !== \"\" && (s3 === s6) && (s6 === s9)){\n      return true;\n    }\n    else if(s1 !== \"\" && (s1 === s5) && (s5 === s9)){\n      return true;\n    }\n    else if(s3 !== \"\" && (s3 === s5) && (s5 === s7)){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n  if(checkWin() && (end === false)){\n    setTurn(\"Winner!\");\n    setEnd(true);\n  }\n  else if((count === 9) && (end === false)){\n    console.log(count);\n    setTurn(\"It's a Tie!\");\n    setEnd(true);\n  }\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Tic-Tac-Toe!</h1>\n      <p>Click on any square below to begin playing! \"O\"s will be going first!</p>\n      <Turn text={turn}></Turn>\n      <div className=\"tic-spaces\">\n        <TicButton change={setTurn} textTitle={turn} symbolC={setSymbol1} symbol={s1} end = {end} incr = {setCount} turns = {count}></TicButton>\n        <TicButton change={setTurn} textTitle={turn} symbolC={setSymbol2} symbol={s2} end = {end} incr = {setCount} turns = {count}></TicButton>\n        <TicButton change={setTurn} textTitle={turn} symbolC={setSymbol3} symbol={s3} end = {end} incr = {setCount} turns = {count}></TicButton>\n        <TicButton change={setTurn} textTitle={turn} symbolC={setSymbol4} symbol={s4} end = {end} incr = {setCount} turns = {count}></TicButton>\n        <TicButton change={setTurn} textTitle={turn} symbolC={setSymbol5} symbol={s5} end = {end} incr = {setCount} turns = {count}></TicButton>\n        <TicButton change={setTurn} textTitle={turn} symbolC={setSymbol6} symbol={s6} end = {end} incr = {setCount} turns = {count}></TicButton>\n        <TicButton change={setTurn} textTitle={turn} symbolC={setSymbol7} symbol={s7} end = {end} incr = {setCount} turns = {count}></TicButton>\n        <TicButton change={setTurn} textTitle={turn} symbolC={setSymbol8} symbol={s8} end = {end} incr = {setCount} turns = {count}></TicButton>\n        <TicButton change={setTurn} textTitle={turn} symbolC={setSymbol9} symbol={s9} end = {end} incr = {setCount} turns = {count}></TicButton>\n      </div>\n      <div>\n        <button id=\"refreshBut\" onClick={refreshPage}>Start Over!</button>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}